<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0917.1648                               -->
<workbook source-build='2019.2.4 (20192.19.0917.1648)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='PollutionVisualizations' path='/workbooks' revision='1.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Date Parameter bin' datatype='date' name='[Date Parameter]' param-domain-type='range' role='measure' type='quantitative' value='#1987-01-01#'>
        <calculation class='tableau' formula='#1987-01-01#' />
        <range granularity='5' max='#2015-12-31#' min='#1987-01-01#' period-type='year' />
      </column>
    </datasource>
    <datasource caption='data' inline='true' name='federated.13fz85k1afk6yp19yqjla1jj52a5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0q8rdqx0kitpq41453o0z188popu'>
            <connection class='textscan' directory='C:/Users/DELL/Documents/Coursework/Visual Analytics/Homework/data.csv' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0q8rdqx0kitpq41453o0z188popu' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='stn_code' ordinal='0' />
            <column datatype='date' date-parse-format='dd/MM/yyyy|#|#|mm-ssZ|#|#|&apos;March&apos; - &apos;M&apos;MMyyyy' name='sampling_date' ordinal='1' />
            <column datatype='string' name='state' ordinal='2' />
            <column datatype='string' name='location' ordinal='3' />
            <column datatype='string' name='agency' ordinal='4' />
            <column datatype='string' name='type' ordinal='5' />
            <column datatype='real' name='so2' ordinal='6' />
            <column datatype='real' name='no2' ordinal='7' />
            <column datatype='string' name='rspm' ordinal='8' />
            <column datatype='real' name='spm' ordinal='9' />
            <column datatype='string' name='location_monitoring_station' ordinal='10' />
            <column datatype='string' name='pm2_5' ordinal='11' />
            <column datatype='date' name='date' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stn_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[stn_code]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>stn_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sampling_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[sampling_date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>sampling_date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>agency</remote-name>
            <remote-type>129</remote-type>
            <local-name>[agency]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>agency</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>so2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[so2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>so2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>no2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[no2]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>no2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rspm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rspm]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>rspm</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>spm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[spm]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>spm</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_monitoring_station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_monitoring_station]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>location_monitoring_station</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pm2_5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pm2_5]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>pm2_5</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Industrial or Sensitive or Rural]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[type]' new-bin='true'>
          <bin default-name='true' value='&quot;Industrial, Industrial Area, Industrial Areas&quot;'>
            <value>&quot;Industrial&quot;</value>
            <value>&quot;Industrial Area&quot;</value>
            <value>&quot;Industrial Areas&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Residential, Residential and others, Residential, Rural and other Areas&quot;'>
            <value>&quot;Residential&quot;</value>
            <value>&quot;Residential and others&quot;</value>
            <value>&quot;Residential, Rural and other Areas&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Sensitive, Sensitive Area, Sensitive Areas&quot;'>
            <value>&quot;Sensitive&quot;</value>
            <value>&quot;Sensitive Area&quot;</value>
            <value>&quot;Sensitive Areas&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Spm (bin)' datatype='integer' name='[Spm (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[spm]' peg='0' size='66' />
      </column>
      <column caption='Agency' datatype='string' name='[agency]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Amlai&quot;' value='&quot;Amli&quot;' />
          <semantic-value key='&quot;Amona&quot;' value='&quot;Vasco da Gama&quot;' />
          <semantic-value key='&quot;Ananthapur&quot;' value='&quot;Anantapur&quot;' />
          <semantic-value key='&quot;Anklesvar&quot;' value='&quot;Ankleshwar&quot;' />
          <semantic-value key='&quot;Anpara&quot;' value='&quot;Basi&quot;' />
          <semantic-value key='&quot;Assanora&quot;' value='&quot;Vasco da Gama&quot;' />
          <semantic-value key='&quot;Aurangabad (MS)&quot;' value='&quot;Aurangabad&quot;' />
          <semantic-value key='&quot;Baroda&quot;' value='&quot;Vadodara&quot;' />
          <semantic-value key='&quot;Berhampur&quot;' value='&quot;Brahmapur&quot;' />
          <semantic-value key='&quot;Bhilai&quot;' value='&quot;Bhilai&quot;' />
          <semantic-value key='&quot;Bhilai Nagar&quot;' value='&quot;Bhilai&quot;' />
          <semantic-value key='&quot;Bicholim&quot;' value='&quot;Vasco da Gama&quot;' />
          <semantic-value key='&quot;Byrnihat&quot;' value='&quot;Shillong&quot;' />
          <semantic-value key='&quot;Champhai&quot;' value='&quot;Aizawl&quot;' />
          <semantic-value key='&quot;Chandarpur&quot;' value='&quot;Chandrapur&quot;' />
          <semantic-value key='&quot;Codli&quot;' value='&quot;Margao&quot;' />
          <semantic-value key='&quot;Daman&quot;' value='&quot;Daman&quot;' />
          <semantic-value key='&quot;Daman Diu &amp; Nagar&quot;' value='&quot;Daman&quot;' />
          <semantic-value key='&quot;Damtal&quot;' value='&quot;Shimla&quot;' />
          <semantic-value key='&quot;DANKUNI&quot;' value='&quot;Jagdispur&quot;' />
          <semantic-value key='&quot;Daranga&quot;' value='&quot;Bongaigaon&quot;' />
          <semantic-value key='&quot;Dawki&quot;' value='&quot;Shillong&quot;' />
          <semantic-value key='&quot;Dehradoon&quot;' value='&quot;Dehra Dun&quot;' />
          <semantic-value key='&quot;Dera Baba&quot;' value='&quot;Dhariwal&quot;' />
          <semantic-value key='&quot;Dera Bassi&quot;' value='&quot;Dhariwal&quot;' />
          <semantic-value key='&quot;Dhanbad&quot;' value='&quot;Dhanbad&quot;' />
          <semantic-value key='&quot;Dharamshala&quot;' value='&quot;Dharmshala&quot;' />
          <semantic-value key='&quot;Domlur&quot;' value='&quot;Bidar&quot;' />
          <semantic-value key='&quot;Durgapur (WB)&quot;' value='&quot;Durgapur&quot;' />
          <semantic-value key='&quot;Gajroula&quot;' value='&quot;Gajraula&quot;' />
          <semantic-value key='&quot;Gobindgarh&quot;' value='&quot;Jamalpur&quot;' />
          <semantic-value key='&quot;Greater Mumbai&quot;' value='&quot;Mumbai&quot;' />
          <semantic-value key='&quot;Honda&quot;' value='&quot;Panjim&quot;' />
          <semantic-value key='&quot;Hyderabad&quot;' value='&quot;Hyderabad&quot;' />
          <semantic-value key='&quot;Jamshedpur&quot;' value='&quot;Jamshedpur&quot;' />
          <semantic-value key='&quot;Jharia&quot;' value='&quot;Jharia&quot;' />
          <semantic-value key='&quot;Kala Amb&quot;' value='&quot;Kalamb&quot;' />
          <semantic-value key='&quot;Kalinga Nagar&quot;' value='&quot;Bhubaneshwar&quot;' />
          <semantic-value key='&quot;Karimnagar&quot;' value='&quot;Karimnagar&quot;' />
          <semantic-value key='&quot;Keonjhar&quot;' value='&quot;Govardhan&quot;' />
          <semantic-value key='&quot;Khadoli&quot;' value='&quot;Daman&quot;' />
          <semantic-value key='&quot;Khammam&quot;' value='&quot;Khammam&quot;' />
          <semantic-value key='&quot;Khliehriat&quot;' value='&quot;Shillong&quot;' />
          <semantic-value key='&quot;Kolasib&quot;' value='&quot;Aizawl&quot;' />
          <semantic-value key='&quot;Korba&quot;' value='&quot;Korba&quot;' />
          <semantic-value key='&quot;Kothur&quot;' value='&quot;Hyderabad&quot;' />
          <semantic-value key='&quot;Kotttayam&quot;' value='&quot;Kottayam&quot;' />
          <semantic-value key='&quot;Kundaim&quot;' value='&quot;Panjim&quot;' />
          <semantic-value key='&quot;Lote&quot;' value='&quot;Chiplun&quot;' />
          <semantic-value key='&quot;MALDAH&quot;' value='&quot;Malda&quot;' />
          <semantic-value key='&quot;Manali&quot;' value='&quot;Manali&quot;' />
          <semantic-value key='&quot;Mapusa&quot;' value='&quot;Mapuca&quot;' />
          <semantic-value key='&quot;Nalco&quot;' value='&quot;Bhubaneshwar&quot;' />
          <semantic-value key='&quot;Nalgonda&quot;' value='&quot;Nalgonda&quot;' />
          <semantic-value key='&quot;Naya Nangal&quot;' value='&quot;Nangal&quot;' />
          <semantic-value key='&quot;Nizamabad&quot;' value='&quot;Nizamabad&quot;' />
          <semantic-value key='&quot;Noida, Ghaziabad&quot;' value='&quot;Noida&quot;' />
          <semantic-value key='&quot;Paradeep&quot;' value='&quot;Paradip&quot;' />
          <semantic-value key='&quot;Parwanoo&quot;' value='&quot;Kasauli&quot;' />
          <semantic-value key='&quot;Patancheru&quot;' value='&quot;Patancheru&quot;' />
          <semantic-value key='&quot;Pondicherry&quot;' value='&quot;Puducherry&quot;' />
          <semantic-value key='&quot;Rai Bareilly&quot;' value='&quot;Rae Bareli&quot;' />
          <semantic-value key='&quot;Raipur&quot;' value='&quot;Raipur&quot;' />
          <semantic-value key='&quot;Ramagundam&quot;' value='&quot;Ramagundam&quot;' />
          <semantic-value key='&quot;Ranebennur&quot;' value='&quot;Ranibennur&quot;' />
          <semantic-value key='&quot;Rayagada&quot;' value='&quot;Raya&quot;' />
          <semantic-value key='&quot;Renusagar&quot;' value='&quot;Renukoot&quot;' />
          <semantic-value key='&quot;Rudrapur&quot;' value='&quot;Rudarpur&quot;' />
          <semantic-value key='&quot;Sangareddy&quot;' value='&quot;Sangareddi&quot;' />
          <semantic-value key='&quot;Saraikela Kharsawan&quot;' value='&quot;Saraikela&quot;' />
          <semantic-value key='&quot;Sarigam&quot;' value='&quot;Silvassa&quot;' />
          <semantic-value key='&quot;Silcher&quot;' value='&quot;Silchar&quot;' />
          <semantic-value key='&quot;Sindri&quot;' value='&quot;Dhanbad&quot;' />
          <semantic-value key='&quot;Sivasagar&quot;' value='&quot;Sivaganga&quot;' />
          <semantic-value key='&quot;South Suburban&quot;' value='&quot;Lower subansiri&quot;' />
          <semantic-value key='&quot;Sunder Nagar&quot;' value='&quot;Sundargarh&quot;' />
          <semantic-value key='&quot;Tarapur&quot;' value='&quot;Taranagar&quot;' />
          <semantic-value key='&quot;Thissur&quot;' value='&quot;Thiruvarur&quot;' />
          <semantic-value key='&quot;Thoothukudi&quot;' value='&quot;Salem&quot;' />
          <semantic-value key='&quot;Tilamol&quot;' value='&quot;Sanguem&quot;' />
          <semantic-value key='&quot;Trichy&quot;' value='&quot;Trichur&quot;' />
          <semantic-value key='&quot;Trivendrum&quot;' value='&quot;Trivandrum&quot;' />
          <semantic-value key='&quot;Turicorin&quot;' value='&quot;Chennai&quot;' />
          <semantic-value key='&quot;ULUBERIA&quot;' value='&quot;Uluberiya&quot;' />
          <semantic-value key='&quot;Umsning&quot;' value='&quot;Shillong&quot;' />
          <semantic-value key='&quot;Usgao&quot;' value='&quot;Panjim&quot;' />
          <semantic-value key='&quot;Vasco&quot;' value='&quot;Vasco da Gama&quot;' />
          <semantic-value key='&quot;Warangal&quot;' value='&quot;Warangal&quot;' />
          <semantic-value key='&quot;Wayanad&quot;' value='&quot;Thiruvarur&quot;' />
          <semantic-value key='&quot;West Singhbhum&quot;' value='&quot;Dhanbad&quot;' />
        </semantic-values>
      </column>
      <column caption='Location Monitoring Station' datatype='string' name='[location_monitoring_station]' role='dimension' type='nominal' />
      <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
      <column caption='Pm2 5' datatype='string' name='[pm2_5]' role='dimension' type='nominal' />
      <column caption='Rspm' datatype='string' name='[rspm]' role='dimension' type='nominal' />
      <column caption='Sampling Date' datatype='date' name='[sampling_date]' role='dimension' type='ordinal' />
      <column caption='So2' datatype='real' default-format='N' name='[so2]' role='measure' type='quantitative' />
      <column caption='Spm' datatype='real' name='[spm]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Stn Code' datatype='integer' name='[stn_code]' role='dimension' type='ordinal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[no2]' derivation='Sum' name='[pcrk:sum:no2:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[no2]' derivation='Sum' name='[pcrk:sum:no2:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[state]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[no2]' derivation='Sum' name='[pcrk:sum:no2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[so2]' derivation='Sum' name='[pcrk:sum:so2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[no2]' derivation='Sum' name='[sum:no2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[so2]' derivation='Sum' name='[sum:so2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='State, Location'>
          <field>[state]</field>
          <field>[location]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/DELL/Documents/Coursework/Visual Analytics/Homework/Tableau assignment/data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/30/2019 11:26:29 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='435742' timestamp-start='2019-10-30 23:26:29.899' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>stn_code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[stn_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stn_code</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2146</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sampling_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[sampling_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sampling_date</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>14581</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>774</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>agency</remote-name>
              <remote-type>129</remote-type>
              <local-name>[agency]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>agency</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>117</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>so2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[so2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>so2</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2373</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>no2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[no2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>no2</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4003</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rspm</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rspm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rspm</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2213</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>spm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[spm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>spm</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3481</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location_monitoring_station</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location_monitoring_station]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location_monitoring_station</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3463</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pm2_5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pm2_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pm2_5</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>423</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>22537</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.47033' measure-ordering='alphabetic' measure-percentage='0.325275' parameter-percentage='0.204396' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:no2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[pcrk:sum:no2:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[pcrk:sum:no2:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[pcrk:sum:no2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[sum:no2:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:so2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[pcrk:sum:so2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[sum:so2:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:no2:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[fVal:sum:no2:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:Spm (bin):ok]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[pcrk:sum:no2:qk:1]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[pcrk:sum:no2:qk:2]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[pcrk:sum:no2:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[sum:no2:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:so2:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[fVal:sum:so2:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[pcrk:sum:so2:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;[federated.13fz85k1afk6yp19yqjla1jj52a5].[sum:so2:qk]&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>#1994-01-01 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2006-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#1990-01-01 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2010-01-01 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#1998-01-01 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2019-01-01 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#1995-01-01 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2015-01-01 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2016-01-01 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#1991-01-01 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2011-01-01 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2004-01-01 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#1987-01-01 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2007-01-01 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2002-01-01 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#1992-01-01 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#1999-01-01 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-01-01 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2000-01-01 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2003-01-01 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2005-01-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#1996-01-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2017-01-01 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#1993-01-01 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#1988-01-01 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2008-01-01 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2001-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#1997-01-01 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2018-01-01 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#1989-01-01 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2009-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[qr:date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;andaman-and-nicobar-islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dadra &amp; Nagar Haveli&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jammu &amp; Kashmir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daman &amp; Diu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uttaranchal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Industrial or Sensitive or Rural]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Industrial, Industrial Area, Industrial Areas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sensitive, Sensitive Area, Sensitive Areas&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;RIRUO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Residential, Residential and others, Residential, Rural and other Areas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order='descending' field-sort-order-type='alphabetical-order' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.13fz85k1afk6yp19yqjla1jj52a5'>
      <datasources>
        <datasource caption='data' name='federated.13fz85k1afk6yp19yqjla1jj52a5' />
      </datasources>
      <datasource-dependencies datasource='federated.13fz85k1afk6yp19yqjla1jj52a5'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:state:nk]' member='&quot;Himachal Pradesh&quot;' />
          <groupfilter function='member' level='[none:state:nk]' member='&quot;Madhya Pradesh&quot;' />
          <groupfilter function='member' level='[none:state:nk]' member='&quot;Maharashtra&quot;' />
          <groupfilter function='member' level='[none:state:nk]' member='&quot;Tamil Nadu&quot;' />
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:qk]' included-values='in-range'>
        <min>1994</min>
        <max>2015</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Forecast analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Forecast Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.13fz85k1afk6yp19yqjla1jj52a5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13fz85k1afk6yp19yqjla1jj52a5'>
            <column-instance column='[spm]' derivation='Avg' name='[avg:spm:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Spm' datatype='real' name='[spm]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[tyr:date:ok]'>
            <groupfilter function='level-members' level='[tyr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[tyr:date:ok]</column>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]</column>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[tyr:date:qk]' field-type='quantitative' max='#2048-09-26 07:32:08.158#' min='#1951-04-22 10:40:12.735#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:spm:qk]' field-type='quantitative' max='353.92378474144618' min='-117.97459491381539' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#eff3e3' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:spm:qk]</rows>
        <cols>[federated.13fz85k1afk6yp19yqjla1jj52a5].[tyr:date:qk]</cols>
        <forecast-specification auto-forecast-agg='false' band-confidence-level='90.000000' enabled='false' fill-type='fill-zero' forecast-agg='Month-Trunc' ignore-last='5' model-type='auto' range-periods='Year-Trunc' range-size='10' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{3F3BAFEE-38D7-43B2-B92D-970C6E1D3B6D}' />
    </worksheet>
    <worksheet name='Map So2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Map Sulfur Dioxide</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.13fz85k1afk6yp19yqjla1jj52a5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13fz85k1afk6yp19yqjla1jj52a5'>
            <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Amlai&quot;' value='&quot;Amli&quot;' />
                <semantic-value key='&quot;Amona&quot;' value='&quot;Vasco da Gama&quot;' />
                <semantic-value key='&quot;Ananthapur&quot;' value='&quot;Anantapur&quot;' />
                <semantic-value key='&quot;Anklesvar&quot;' value='&quot;Ankleshwar&quot;' />
                <semantic-value key='&quot;Anpara&quot;' value='&quot;Basi&quot;' />
                <semantic-value key='&quot;Assanora&quot;' value='&quot;Vasco da Gama&quot;' />
                <semantic-value key='&quot;Aurangabad (MS)&quot;' value='&quot;Aurangabad&quot;' />
                <semantic-value key='&quot;Baroda&quot;' value='&quot;Vadodara&quot;' />
                <semantic-value key='&quot;Berhampur&quot;' value='&quot;Brahmapur&quot;' />
                <semantic-value key='&quot;Bhilai&quot;' value='&quot;Bhilai&quot;' />
                <semantic-value key='&quot;Bhilai Nagar&quot;' value='&quot;Bhilai&quot;' />
                <semantic-value key='&quot;Bicholim&quot;' value='&quot;Vasco da Gama&quot;' />
                <semantic-value key='&quot;Byrnihat&quot;' value='&quot;Shillong&quot;' />
                <semantic-value key='&quot;Champhai&quot;' value='&quot;Aizawl&quot;' />
                <semantic-value key='&quot;Chandarpur&quot;' value='&quot;Chandrapur&quot;' />
                <semantic-value key='&quot;Codli&quot;' value='&quot;Margao&quot;' />
                <semantic-value key='&quot;Daman&quot;' value='&quot;Daman&quot;' />
                <semantic-value key='&quot;Daman Diu &amp; Nagar&quot;' value='&quot;Daman&quot;' />
                <semantic-value key='&quot;Damtal&quot;' value='&quot;Shimla&quot;' />
                <semantic-value key='&quot;DANKUNI&quot;' value='&quot;Jagdispur&quot;' />
                <semantic-value key='&quot;Daranga&quot;' value='&quot;Bongaigaon&quot;' />
                <semantic-value key='&quot;Dawki&quot;' value='&quot;Shillong&quot;' />
                <semantic-value key='&quot;Dehradoon&quot;' value='&quot;Dehra Dun&quot;' />
                <semantic-value key='&quot;Dera Baba&quot;' value='&quot;Dhariwal&quot;' />
                <semantic-value key='&quot;Dera Bassi&quot;' value='&quot;Dhariwal&quot;' />
                <semantic-value key='&quot;Dhanbad&quot;' value='&quot;Dhanbad&quot;' />
                <semantic-value key='&quot;Dharamshala&quot;' value='&quot;Dharmshala&quot;' />
                <semantic-value key='&quot;Domlur&quot;' value='&quot;Bidar&quot;' />
                <semantic-value key='&quot;Durgapur (WB)&quot;' value='&quot;Durgapur&quot;' />
                <semantic-value key='&quot;Gajroula&quot;' value='&quot;Gajraula&quot;' />
                <semantic-value key='&quot;Gobindgarh&quot;' value='&quot;Jamalpur&quot;' />
                <semantic-value key='&quot;Greater Mumbai&quot;' value='&quot;Mumbai&quot;' />
                <semantic-value key='&quot;Honda&quot;' value='&quot;Panjim&quot;' />
                <semantic-value key='&quot;Hyderabad&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Jamshedpur&quot;' value='&quot;Jamshedpur&quot;' />
                <semantic-value key='&quot;Jharia&quot;' value='&quot;Jharia&quot;' />
                <semantic-value key='&quot;Kala Amb&quot;' value='&quot;Kalamb&quot;' />
                <semantic-value key='&quot;Kalinga Nagar&quot;' value='&quot;Bhubaneshwar&quot;' />
                <semantic-value key='&quot;Karimnagar&quot;' value='&quot;Karimnagar&quot;' />
                <semantic-value key='&quot;Keonjhar&quot;' value='&quot;Govardhan&quot;' />
                <semantic-value key='&quot;Khadoli&quot;' value='&quot;Daman&quot;' />
                <semantic-value key='&quot;Khammam&quot;' value='&quot;Khammam&quot;' />
                <semantic-value key='&quot;Khliehriat&quot;' value='&quot;Shillong&quot;' />
                <semantic-value key='&quot;Kolasib&quot;' value='&quot;Aizawl&quot;' />
                <semantic-value key='&quot;Korba&quot;' value='&quot;Korba&quot;' />
                <semantic-value key='&quot;Kothur&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Kotttayam&quot;' value='&quot;Kottayam&quot;' />
                <semantic-value key='&quot;Kundaim&quot;' value='&quot;Panjim&quot;' />
                <semantic-value key='&quot;Lote&quot;' value='&quot;Chiplun&quot;' />
                <semantic-value key='&quot;MALDAH&quot;' value='&quot;Malda&quot;' />
                <semantic-value key='&quot;Manali&quot;' value='&quot;Manali&quot;' />
                <semantic-value key='&quot;Mapusa&quot;' value='&quot;Mapuca&quot;' />
                <semantic-value key='&quot;Nalco&quot;' value='&quot;Bhubaneshwar&quot;' />
                <semantic-value key='&quot;Nalgonda&quot;' value='&quot;Nalgonda&quot;' />
                <semantic-value key='&quot;Naya Nangal&quot;' value='&quot;Nangal&quot;' />
                <semantic-value key='&quot;Nizamabad&quot;' value='&quot;Nizamabad&quot;' />
                <semantic-value key='&quot;Noida, Ghaziabad&quot;' value='&quot;Noida&quot;' />
                <semantic-value key='&quot;Paradeep&quot;' value='&quot;Paradip&quot;' />
                <semantic-value key='&quot;Parwanoo&quot;' value='&quot;Kasauli&quot;' />
                <semantic-value key='&quot;Patancheru&quot;' value='&quot;Patancheru&quot;' />
                <semantic-value key='&quot;Pondicherry&quot;' value='&quot;Puducherry&quot;' />
                <semantic-value key='&quot;Rai Bareilly&quot;' value='&quot;Rae Bareli&quot;' />
                <semantic-value key='&quot;Raipur&quot;' value='&quot;Raipur&quot;' />
                <semantic-value key='&quot;Ramagundam&quot;' value='&quot;Ramagundam&quot;' />
                <semantic-value key='&quot;Ranebennur&quot;' value='&quot;Ranibennur&quot;' />
                <semantic-value key='&quot;Rayagada&quot;' value='&quot;Raya&quot;' />
                <semantic-value key='&quot;Renusagar&quot;' value='&quot;Renukoot&quot;' />
                <semantic-value key='&quot;Rudrapur&quot;' value='&quot;Rudarpur&quot;' />
                <semantic-value key='&quot;Sangareddy&quot;' value='&quot;Sangareddi&quot;' />
                <semantic-value key='&quot;Saraikela Kharsawan&quot;' value='&quot;Saraikela&quot;' />
                <semantic-value key='&quot;Sarigam&quot;' value='&quot;Silvassa&quot;' />
                <semantic-value key='&quot;Silcher&quot;' value='&quot;Silchar&quot;' />
                <semantic-value key='&quot;Sindri&quot;' value='&quot;Dhanbad&quot;' />
                <semantic-value key='&quot;Sivasagar&quot;' value='&quot;Sivaganga&quot;' />
                <semantic-value key='&quot;South Suburban&quot;' value='&quot;Lower subansiri&quot;' />
                <semantic-value key='&quot;Sunder Nagar&quot;' value='&quot;Sundargarh&quot;' />
                <semantic-value key='&quot;Tarapur&quot;' value='&quot;Taranagar&quot;' />
                <semantic-value key='&quot;Thissur&quot;' value='&quot;Thiruvarur&quot;' />
                <semantic-value key='&quot;Thoothukudi&quot;' value='&quot;Salem&quot;' />
                <semantic-value key='&quot;Tilamol&quot;' value='&quot;Sanguem&quot;' />
                <semantic-value key='&quot;Trichy&quot;' value='&quot;Trichur&quot;' />
                <semantic-value key='&quot;Trivendrum&quot;' value='&quot;Trivandrum&quot;' />
                <semantic-value key='&quot;Turicorin&quot;' value='&quot;Chennai&quot;' />
                <semantic-value key='&quot;ULUBERIA&quot;' value='&quot;Uluberiya&quot;' />
                <semantic-value key='&quot;Umsning&quot;' value='&quot;Shillong&quot;' />
                <semantic-value key='&quot;Usgao&quot;' value='&quot;Panjim&quot;' />
                <semantic-value key='&quot;Vasco&quot;' value='&quot;Vasco da Gama&quot;' />
                <semantic-value key='&quot;Warangal&quot;' value='&quot;Warangal&quot;' />
                <semantic-value key='&quot;Wayanad&quot;' value='&quot;Thiruvarur&quot;' />
                <semantic-value key='&quot;West Singhbhum&quot;' value='&quot;Dhanbad&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='So2' datatype='real' default-format='N' name='[so2]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2010' />
              <groupfilter function='member' level='[yr:date:ok]' member='2011' />
              <groupfilter function='member' level='[yr:date:ok]' member='2012' />
              <groupfilter function='member' level='[yr:date:ok]' member='2013' />
              <groupfilter function='member' level='[yr:date:ok]' member='2014' />
              <groupfilter function='member' level='[yr:date:ok]' member='2015' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:ok]</column>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:qk]</column>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Longitude (generated)]' field-type='quantitative' max='10828550.830853153' min='5466933.7680848176' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Latitude (generated)]' field-type='quantitative' max='3413890.9114618413' min='583223.64511176257' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' scope='rows' value='#00000000' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:location:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Longitude (generated)]' value='false' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#000000' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#eff3e3' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' />
              <lod column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:location:nk]' />
              <size column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:so2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-transparency' value='198' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#4f4d7f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13fz85k1afk6yp19yqjla1jj52a5].[Latitude (generated)]</rows>
        <cols>[federated.13fz85k1afk6yp19yqjla1jj52a5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3CC4F062-3BFF-481C-8E20-61091CE2CF5A}' />
    </worksheet>
    <worksheet name='Most populated from selected'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Most Polluted from Selected List</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.13fz85k1afk6yp19yqjla1jj52a5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13fz85k1afk6yp19yqjla1jj52a5'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Amlai&quot;' value='&quot;Amli&quot;' />
                <semantic-value key='&quot;Amona&quot;' value='&quot;Vasco da Gama&quot;' />
                <semantic-value key='&quot;Ananthapur&quot;' value='&quot;Anantapur&quot;' />
                <semantic-value key='&quot;Anklesvar&quot;' value='&quot;Ankleshwar&quot;' />
                <semantic-value key='&quot;Anpara&quot;' value='&quot;Basi&quot;' />
                <semantic-value key='&quot;Assanora&quot;' value='&quot;Vasco da Gama&quot;' />
                <semantic-value key='&quot;Aurangabad (MS)&quot;' value='&quot;Aurangabad&quot;' />
                <semantic-value key='&quot;Baroda&quot;' value='&quot;Vadodara&quot;' />
                <semantic-value key='&quot;Berhampur&quot;' value='&quot;Brahmapur&quot;' />
                <semantic-value key='&quot;Bhilai&quot;' value='&quot;Bhilai&quot;' />
                <semantic-value key='&quot;Bhilai Nagar&quot;' value='&quot;Bhilai&quot;' />
                <semantic-value key='&quot;Bicholim&quot;' value='&quot;Vasco da Gama&quot;' />
                <semantic-value key='&quot;Byrnihat&quot;' value='&quot;Shillong&quot;' />
                <semantic-value key='&quot;Champhai&quot;' value='&quot;Aizawl&quot;' />
                <semantic-value key='&quot;Chandarpur&quot;' value='&quot;Chandrapur&quot;' />
                <semantic-value key='&quot;Codli&quot;' value='&quot;Margao&quot;' />
                <semantic-value key='&quot;Daman&quot;' value='&quot;Daman&quot;' />
                <semantic-value key='&quot;Daman Diu &amp; Nagar&quot;' value='&quot;Daman&quot;' />
                <semantic-value key='&quot;Damtal&quot;' value='&quot;Shimla&quot;' />
                <semantic-value key='&quot;DANKUNI&quot;' value='&quot;Jagdispur&quot;' />
                <semantic-value key='&quot;Daranga&quot;' value='&quot;Bongaigaon&quot;' />
                <semantic-value key='&quot;Dawki&quot;' value='&quot;Shillong&quot;' />
                <semantic-value key='&quot;Dehradoon&quot;' value='&quot;Dehra Dun&quot;' />
                <semantic-value key='&quot;Dera Baba&quot;' value='&quot;Dhariwal&quot;' />
                <semantic-value key='&quot;Dera Bassi&quot;' value='&quot;Dhariwal&quot;' />
                <semantic-value key='&quot;Dhanbad&quot;' value='&quot;Dhanbad&quot;' />
                <semantic-value key='&quot;Dharamshala&quot;' value='&quot;Dharmshala&quot;' />
                <semantic-value key='&quot;Domlur&quot;' value='&quot;Bidar&quot;' />
                <semantic-value key='&quot;Durgapur (WB)&quot;' value='&quot;Durgapur&quot;' />
                <semantic-value key='&quot;Gajroula&quot;' value='&quot;Gajraula&quot;' />
                <semantic-value key='&quot;Gobindgarh&quot;' value='&quot;Jamalpur&quot;' />
                <semantic-value key='&quot;Greater Mumbai&quot;' value='&quot;Mumbai&quot;' />
                <semantic-value key='&quot;Honda&quot;' value='&quot;Panjim&quot;' />
                <semantic-value key='&quot;Hyderabad&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Jamshedpur&quot;' value='&quot;Jamshedpur&quot;' />
                <semantic-value key='&quot;Jharia&quot;' value='&quot;Jharia&quot;' />
                <semantic-value key='&quot;Kala Amb&quot;' value='&quot;Kalamb&quot;' />
                <semantic-value key='&quot;Kalinga Nagar&quot;' value='&quot;Bhubaneshwar&quot;' />
                <semantic-value key='&quot;Karimnagar&quot;' value='&quot;Karimnagar&quot;' />
                <semantic-value key='&quot;Keonjhar&quot;' value='&quot;Govardhan&quot;' />
                <semantic-value key='&quot;Khadoli&quot;' value='&quot;Daman&quot;' />
                <semantic-value key='&quot;Khammam&quot;' value='&quot;Khammam&quot;' />
                <semantic-value key='&quot;Khliehriat&quot;' value='&quot;Shillong&quot;' />
                <semantic-value key='&quot;Kolasib&quot;' value='&quot;Aizawl&quot;' />
                <semantic-value key='&quot;Korba&quot;' value='&quot;Korba&quot;' />
                <semantic-value key='&quot;Kothur&quot;' value='&quot;Hyderabad&quot;' />
                <semantic-value key='&quot;Kotttayam&quot;' value='&quot;Kottayam&quot;' />
                <semantic-value key='&quot;Kundaim&quot;' value='&quot;Panjim&quot;' />
                <semantic-value key='&quot;Lote&quot;' value='&quot;Chiplun&quot;' />
                <semantic-value key='&quot;MALDAH&quot;' value='&quot;Malda&quot;' />
                <semantic-value key='&quot;Manali&quot;' value='&quot;Manali&quot;' />
                <semantic-value key='&quot;Mapusa&quot;' value='&quot;Mapuca&quot;' />
                <semantic-value key='&quot;Nalco&quot;' value='&quot;Bhubaneshwar&quot;' />
                <semantic-value key='&quot;Nalgonda&quot;' value='&quot;Nalgonda&quot;' />
                <semantic-value key='&quot;Naya Nangal&quot;' value='&quot;Nangal&quot;' />
                <semantic-value key='&quot;Nizamabad&quot;' value='&quot;Nizamabad&quot;' />
                <semantic-value key='&quot;Noida, Ghaziabad&quot;' value='&quot;Noida&quot;' />
                <semantic-value key='&quot;Paradeep&quot;' value='&quot;Paradip&quot;' />
                <semantic-value key='&quot;Parwanoo&quot;' value='&quot;Kasauli&quot;' />
                <semantic-value key='&quot;Patancheru&quot;' value='&quot;Patancheru&quot;' />
                <semantic-value key='&quot;Pondicherry&quot;' value='&quot;Puducherry&quot;' />
                <semantic-value key='&quot;Rai Bareilly&quot;' value='&quot;Rae Bareli&quot;' />
                <semantic-value key='&quot;Raipur&quot;' value='&quot;Raipur&quot;' />
                <semantic-value key='&quot;Ramagundam&quot;' value='&quot;Ramagundam&quot;' />
                <semantic-value key='&quot;Ranebennur&quot;' value='&quot;Ranibennur&quot;' />
                <semantic-value key='&quot;Rayagada&quot;' value='&quot;Raya&quot;' />
                <semantic-value key='&quot;Renusagar&quot;' value='&quot;Renukoot&quot;' />
                <semantic-value key='&quot;Rudrapur&quot;' value='&quot;Rudarpur&quot;' />
                <semantic-value key='&quot;Sangareddy&quot;' value='&quot;Sangareddi&quot;' />
                <semantic-value key='&quot;Saraikela Kharsawan&quot;' value='&quot;Saraikela&quot;' />
                <semantic-value key='&quot;Sarigam&quot;' value='&quot;Silvassa&quot;' />
                <semantic-value key='&quot;Silcher&quot;' value='&quot;Silchar&quot;' />
                <semantic-value key='&quot;Sindri&quot;' value='&quot;Dhanbad&quot;' />
                <semantic-value key='&quot;Sivasagar&quot;' value='&quot;Sivaganga&quot;' />
                <semantic-value key='&quot;South Suburban&quot;' value='&quot;Lower subansiri&quot;' />
                <semantic-value key='&quot;Sunder Nagar&quot;' value='&quot;Sundargarh&quot;' />
                <semantic-value key='&quot;Tarapur&quot;' value='&quot;Taranagar&quot;' />
                <semantic-value key='&quot;Thissur&quot;' value='&quot;Thiruvarur&quot;' />
                <semantic-value key='&quot;Thoothukudi&quot;' value='&quot;Salem&quot;' />
                <semantic-value key='&quot;Tilamol&quot;' value='&quot;Sanguem&quot;' />
                <semantic-value key='&quot;Trichy&quot;' value='&quot;Trichur&quot;' />
                <semantic-value key='&quot;Trivendrum&quot;' value='&quot;Trivandrum&quot;' />
                <semantic-value key='&quot;Turicorin&quot;' value='&quot;Chennai&quot;' />
                <semantic-value key='&quot;ULUBERIA&quot;' value='&quot;Uluberiya&quot;' />
                <semantic-value key='&quot;Umsning&quot;' value='&quot;Shillong&quot;' />
                <semantic-value key='&quot;Usgao&quot;' value='&quot;Panjim&quot;' />
                <semantic-value key='&quot;Vasco&quot;' value='&quot;Vasco da Gama&quot;' />
                <semantic-value key='&quot;Warangal&quot;' value='&quot;Warangal&quot;' />
                <semantic-value key='&quot;Wayanad&quot;' value='&quot;Thiruvarur&quot;' />
                <semantic-value key='&quot;West Singhbhum&quot;' value='&quot;Dhanbad&quot;' />
              </semantic-values>
            </column>
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='So2' datatype='real' default-format='N' name='[so2]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[no2]' derivation='Sum' name='[sum:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Sum' name='[sum:so2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:qk]</column>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='border-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-width' value='2' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#eff3e3' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' />
              <text column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' />
              <text column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:location:nk]' />
              <wedge-size column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[sum:no2:qk]' />
              <size column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[sum:so2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{45F19676-7FE6-40A5-8B90-4559B1D19299}' />
    </worksheet>
    <worksheet name='area and population'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Year and Area Pollution graph</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.13fz85k1afk6yp19yqjla1jj52a5' />
          </datasources>
          <datasource-dependencies datasource='federated.13fz85k1afk6yp19yqjla1jj52a5'>
            <column datatype='string' name='[Industrial or Sensitive or Rural]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[type]' new-bin='true'>
                <bin default-name='true' value='&quot;Industrial, Industrial Area, Industrial Areas&quot;'>
                  <value>&quot;Industrial&quot;</value>
                  <value>&quot;Industrial Area&quot;</value>
                  <value>&quot;Industrial Areas&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Residential, Residential and others, Residential, Rural and other Areas&quot;'>
                  <value>&quot;Residential&quot;</value>
                  <value>&quot;Residential and others&quot;</value>
                  <value>&quot;Residential, Rural and other Areas&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Sensitive, Sensitive Area, Sensitive Areas&quot;'>
                  <value>&quot;Sensitive&quot;</value>
                  <value>&quot;Sensitive Area&quot;</value>
                  <value>&quot;Sensitive Areas&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[no2]' derivation='Avg' name='[avg:no2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[so2]' derivation='Avg' name='[avg:so2:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='No2' datatype='real' name='[no2]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='So2' datatype='real' default-format='N' name='[so2]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Industrial or Sensitive or Rural]' member='&quot;Industrial, Industrial Area, Industrial Areas&quot;' />
              <groupfilter function='member' level='[Industrial or Sensitive or Rural]' member='&quot;Residential, Residential and others, Residential, Rural and other Areas&quot;' />
              <groupfilter function='member' level='[Industrial or Sensitive or Rural]' member='&quot;Sensitive, Sensitive Area, Sensitive Areas&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:no2:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:so2:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='1987' function='range' level='[yr:date:ok]' to='2002' />
              <groupfilter from='2004' function='range' level='[yr:date:ok]' to='2015' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:so2:qk]</column>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:no2:qk]</column>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]</column>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:qk]</column>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:ok]</column>
            <column>[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:ok]' value='-90' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[tyr:date:qk]' value='false' />
            <format attr='break-on-special' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[tyr:date:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[tyr:date:qk]' value='false' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e8edda' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]' />
              <text column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:no2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]' />
              <text column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:so2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]' />
              <text column='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:no2:qk] + [federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:so2:qk])</rows>
        <cols>[federated.13fz85k1afk6yp19yqjla1jj52a5].[tyr:date:qk]</cols>
      </table>
      <simple-id uuid='{5DB1DDD0-FBCE-4A6F-9054-62211326EA55}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='data' name='federated.13fz85k1afk6yp19yqjla1jj52a5' />
      </datasources>
      <datasource-dependencies datasource='federated.13fz85k1afk6yp19yqjla1jj52a5'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='36' param='horz' type='layout-flow' w='98662' x='669' y='1351'>
            <zone h='97298' id='34' type='layout-basic' w='98662' x='669' y='1351'>
              <zone h='97298' id='9' param='horz' type='layout-flow' w='82616' x='669' y='1351'>
                <zone h='97298' id='7' type='layout-basic' w='82616' x='669' y='1351'>
                  <zone h='51014' id='5' name='Map So2' w='41231' x='669' y='1351'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='57264' id='12' name='area and population' w='41385' x='41900' y='1351'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46284' id='15' name='Forecast analysis' w='41231' x='669' y='52365'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='40034' id='33' name='Most populated from selected' w='41385' x='41900' y='58615'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='14020' id='13' name='area and population' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16046' x='83285' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16553' id='14' name='area and population' pane-specification-id='1' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]' type='color' w='16046' x='83285' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34629' id='16' name='Forecast analysis' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' type='filter' values='cascading' w='16046' x='83285' y='15371'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13008' id='11' name='Map So2' pane-specification-id='0' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:so2:qk]' type='size' w='16046' x='83285' y='85641'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19088' id='10' name='Map So2' pane-specification-id='0' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' type='color' w='16046' x='83285' y='66553'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='48' param='vert' type='layout-flow' w='98662' x='669' y='1351'>
                <zone fixed-size='280' h='51014' id='5' is-fixed='true' name='Map So2' w='41231' x='669' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13008' id='11' name='Map So2' pane-specification-id='0' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:so2:qk]' type='size' w='16046' x='83285' y='85641'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19088' id='10' name='Map So2' pane-specification-id='0' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' type='color' w='16046' x='83285' y='66553'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14020' id='13' name='area and population' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16046' x='83285' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='57264' id='12' is-fixed='true' name='area and population' w='41385' x='41900' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16553' id='14' name='area and population' pane-specification-id='1' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]' type='color' w='16046' x='83285' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='34629' id='16' mode='checkdropdown' name='Forecast analysis' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' type='filter' values='cascading' w='16046' x='83285' y='15371'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46284' id='15' is-fixed='true' name='Forecast analysis' w='41231' x='669' y='52365'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40034' id='33' is-fixed='true' name='Most populated from selected' w='41385' x='41900' y='58615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{07625D88-4BFF-4B79-B35E-9B37F948380B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map So2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:so2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9552BDD8-7295-40D7-8CA8-6BBC3BB1622A}' />
    </window>
    <window class='worksheet' name='area and population'>
      <cards>
        <edge name='left'>
          <strip size='155'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='148'>
            <card param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03116C3B-F7E7-4D6B-90F6-360E89E65351}' />
    </window>
    <window class='worksheet' name='Forecast analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:spm:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:Forecast Indicator:nk]</field>
            <field>[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:Spm (bin):ok]</field>
            <field>[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:spm:ok]</field>
            <field>[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]</field>
            <field>[federated.13fz85k1afk6yp19yqjla1jj52a5].[tyr:date:ok]</field>
            <field>[federated.13fz85k1afk6yp19yqjla1jj52a5].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{9CACE556-F2A0-43FF-9D41-1AF46647E066}' />
    </window>
    <window class='worksheet' name='Most populated from selected'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' type='filter' values='cascading' />
            <card param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[yr:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.13fz85k1afk6yp19yqjla1jj52a5].[sum:so2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13fz85k1afk6yp19yqjla1jj52a5].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E2A4C59-6EA1-4E2D-9E6B-986FBD1812A5}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Forecast analysis'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Map So2'>
          <zoom type='entire-view' />
          <highlight field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[avg:so2:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Most populated from selected'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='area and population'>
          <zoom type='entire-view' />
          <highlight field='[federated.13fz85k1afk6yp19yqjla1jj52a5].[Industrial or Sensitive or Rural]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{9F384700-75F1-4FFA-B4B9-B1153CC103FA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      2Nf8D5xMTT7wKlNMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Forecast analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map So2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most populated from selected' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='area and population' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
